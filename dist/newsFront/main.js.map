{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/component/archive-list/archive-list.component.css","webpack:///./src/app/component/archive-list/archive-list.component.html","webpack:///./src/app/component/archive-list/archive-list.component.ts","webpack:///./src/app/component/home/home.component.css","webpack:///./src/app/component/home/home.component.html","webpack:///./src/app/component/home/home.component.ts","webpack:///./src/app/component/news-list/news-list.component.css","webpack:///./src/app/component/news-list/news-list.component.html","webpack:///./src/app/component/news-list/news-list.component.ts","webpack:///./src/app/modules/material.module.ts","webpack:///./src/app/service/news.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Use RouterModule, Routes for activating routing in angular\nimport { RouterModule, Routes } from '@angular/router';\n\n// Include components for in which router service to be used\nimport { HomeComponent } from './component/home/home.component';\nimport { NewsListComponent } from './component/news-list/news-list.component';\nimport { ArchiveListComponent } from './component/archive-list/archive-list.component';\n\n// Routes array define component along with the path name for url\nconst routes: Routes = [\n  { path: '', component: HomeComponent, pathMatch: 'full' },\n  { path: 'news-list', component: NewsListComponent },\n  { path: 'archive-list', component: ArchiveListComponent },\n];\n\n// Import RouterModule and inject routes array in it and dont forget to export the RouterModule\n@NgModule({\n  imports: [CommonModule,RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  declarations: []\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n\\n  <div fxFlex fxLayout=\\\"row\\\">\\n    <button routerLink=\\\"/\\\" mat-icon-button>\\n      <mat-icon>home</mat-icon>\\n    </button>\\n    <div fxFlex></div>\\n  </div>\\n\\n  <span>News App</span>\\n\\n  <div fxFlex fxLayout=\\\"row\\\">\\n    <div fxFlex></div>\\n\\n    <div class=\\\"px-5\\\">\\n      <button mat-raised-button color=\\\"accent\\\" routerLink=\\\"/news-list\\\">News</button>\\n    </div>\\n    <div class=\\\"px-5\\\">\\n      <button mat-raised-button color=\\\"accent\\\" routerLink=\\\"/archive-list\\\">Archive</button>\\n    </div>\\n  </div>\\n</mat-toolbar>\\n\\n\\n<!-- Main content -->\\n<main role=\\\"main\\\">\\n  <!-- Use router template to show the components for which router service is activated -->\\n  <router-outlet></router-outlet>\\n</main>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'newsFront';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\n\n// Firebase Modules\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { environment } from '../environments/environment';\n\n// Externar resources\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CustomMaterialModule } from './modules/material.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n// Components\nimport { AppComponent } from './app.component';\nimport { NewsListComponent } from './component/news-list/news-list.component';\nimport { ArchiveListComponent } from './component/archive-list/archive-list.component';\nimport { HomeComponent } from './component/home/home.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NewsListComponent,\n    ArchiveListComponent,\n    HomeComponent\n  ],\n  imports: [\n    AngularFireModule.initializeApp(environment.firebaseConfig), // Main Angular fire module\n    AngularFireDatabaseModule,  // Firebase database module\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    CustomMaterialModule,\n    FlexLayoutModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudC9hcmNoaXZlLWxpc3QvYXJjaGl2ZS1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-card class=\\\"margin-20\\\">\\n\\n  <mat-card-title>\\n    <div fxLayout=\\\"row\\\" *ngIf=\\\"Archived\\\">\\n      List of Archived ({{Archived.length}})\\n    </div>\\n  </mat-card-title>\\n\\n  <mat-divider></mat-divider>\\n\\n  <mat-card-content>\\n    <mat-list>\\n      <div *ngFor=\\\"let item of Archived\\\">\\n        <mat-list-item>\\n          <span>\\n            <span class=\\\"fwb\\\">{{item.title}}</span> - {{item.body}}\\n          </span>\\n\\n          <div fxFlex></div>\\n\\n          <mat-chip-list>\\n            <mat-chip>{{ item.date | date:\\\"dd/MM/yyyy\\\" }}</mat-chip>\\n          </mat-chip-list>\\n\\n          <button mat-icon-button color=\\\"primary\\\" matTooltip=\\\"Delete\\\" (click)=\\\"DeleteArchived(item.$key)\\\">\\n            <mat-icon>delete</mat-icon>\\n          </button>\\n\\n        </mat-list-item>\\n\\n        <mat-divider></mat-divider>\\n      </div>\\n    </mat-list>\\n  </mat-card-content>\\n\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NewsService } from '../../service/news.service';\nimport { News } from '../../model/news';\n\n@Component({\n  selector: 'app-archive-list',\n  templateUrl: './archive-list.component.html',\n  styleUrls: ['./archive-list.component.css']\n})\nexport class ArchiveListComponent implements OnInit {\n\n  Archived: News[];\n\n  constructor(\n    public newsApi: NewsService,\n  ) { }\n\n  ngOnInit() {\n    let s = this.newsApi.GetNewList();\n    s.snapshotChanges().subscribe(data => { // Using snapshotChanges() method to retrieve list of data along with metadata($key)\n      this.Archived = [];\n      data.forEach(item => {\n        let a = item.payload.toJSON();\n        a['$key'] = item.key;\n\n        // if(a.archived && a.archived != false) { // Filter news archived\n        //   this.Archived.push(a as News); // Insert news\n        // }\n      })\n\n      // Order items by date\n      this.OrderNewsByDate();\n    })\n  }\n\n  DeleteArchived(id: string) {\n    this.newsApi.DeleteNew(id);\n  }\n\n  OrderNewsByDate() {\n    this.Archived = this.Archived.sort((a: any, b: any) =>\n        new Date(a.date).getTime() - new Date(b.date).getTime()\n    );\n  }\n\n}\n","module.exports = \".homeCard {\\r\\n  min-height: 20vh;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50L2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQWlCO0NBQ2xCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50L2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhvbWVDYXJkIHtcclxuICBtaW4taGVpZ2h0OiAyMHZoO1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<div fxLayout=\\\"row\\\" class=\\\"margin-20\\\">\\n  <div fxFlex class=\\\"px-5 clickable\\\" routerLink=\\\"/news-list\\\">\\n    <mat-card class=\\\"homeCard\\\" fxLayoutAlign=\\\"center center\\\">\\n      <mat-card-title>News</mat-card-title>\\n    </mat-card>\\n  </div>\\n\\n  <div fxFlex class=\\\"px-5 clickable\\\" routerLink=\\\"/archive-list\\\">\\n    <mat-card class=\\\"homeCard\\\" fxLayoutAlign=\\\"center center\\\">\\n      <mat-card-title>Archived</mat-card-title>\\n    </mat-card>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudC9uZXdzLWxpc3QvbmV3cy1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-card class=\\\"margin-20\\\">\\n\\n  <mat-card-title>\\n    <div fxLayout=\\\"row\\\" *ngIf=\\\"News\\\">\\n      List of News ({{News.length}})\\n    </div>\\n  </mat-card-title>\\n\\n  <mat-divider></mat-divider>\\n\\n  <mat-card-content>\\n    <mat-list>\\n      <div *ngFor=\\\"let item of News\\\">\\n        <mat-list-item>\\n          <span>\\n            <span class=\\\"fwb\\\">{{item.title}}</span> - {{item.body}}\\n          </span>\\n\\n          <div fxFlex></div>\\n\\n          <mat-chip-list>\\n            <mat-chip>{{ item.date | date:\\\"dd/MM/yyyy\\\" }}</mat-chip>\\n          </mat-chip-list>\\n\\n          <button mat-icon-button color=\\\"primary\\\" matTooltip=\\\"Archive\\\" (click)=\\\"ArchiveNew(item.$key)\\\">\\n            <mat-icon>archive</mat-icon>\\n          </button>\\n\\n        </mat-list-item>\\n\\n        <mat-divider></mat-divider>\\n      </div>\\n    </mat-list>\\n  </mat-card-content>\\n\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NewsService } from '../../service/news.service';\nimport { News } from '../../model/news';\n\n@Component({\n  selector: 'app-news-list',\n  templateUrl: './news-list.component.html',\n  styleUrls: ['./news-list.component.css']\n})\nexport class NewsListComponent implements OnInit {\n  News: News[];\n\n  constructor(\n    public newsApi: NewsService,\n  ) { }\n\n  ngOnInit() {\n    let s = this.newsApi.GetNewList();\n    s.snapshotChanges().subscribe(data => { // Using snapshotChanges() method to retrieve list of data along with metadata($key)\n      this.News = [];\n      data.forEach(item => {\n        let a = item.payload.toJSON();\n        a['$key'] = item.key;\n\n        if(!a['archived'] || a['archived'] == false) { // Filter news not archived\n          this.News.push(a as News); // Insert news\n        }\n      })\n\n      // Order items by date\n      this.OrderNewsByDate();\n    })\n  }\n\n  ArchiveNew(id: string) {\n    this.newsApi.ArchiveNew(id);\n  }\n\n  OrderNewsByDate() {\n    this.News = this.News.sort((a: any, b: any) =>\n        new Date(a.date).getTime() - new Date(b.date).getTime()\n    );\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\n\r\nimport {\r\n  MatSlideToggleModule,\r\n  MatInputModule,\r\n  MatRippleModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule,\r\n  MatButtonModule,\r\n  MatCheckboxModule,\r\n  MatToolbarModule,\r\n  MatListModule,\r\n  MatCardModule,\r\n  MatIconModule,\r\n  MatTooltipModule,\r\n  MatExpansionModule,\r\n  MatDialogModule,\r\n  MatFormFieldModule,\r\n  MatSnackBarModule,\r\n  MatRadioModule,\r\n  MatGridListModule,\r\n  MatChipsModule,\r\n} from '@angular/material';\r\n\r\n/**\r\n * NgModule that includes all Material modules that are required to serve the demo-app.\r\n */\r\n@NgModule({\r\n  exports: [\r\n    MatSlideToggleModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatInputModule,\r\n    MatRippleModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    MatExpansionModule,\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatSnackBarModule,\r\n    MatRadioModule,\r\n    MatGridListModule,\r\n    MatChipsModule,\r\n  ]\r\n})\r\nexport class CustomMaterialModule {}\r\n","import { Injectable } from '@angular/core';\nimport { News } from '../model/news';  // News data type interface class\nimport { AngularFireDatabase, AngularFireList, AngularFireObject } from '@angular/fire/database';  // Firebase modules for Database, Data list and Single object\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NewsService {\n  newsRef: AngularFireList<any>;    // Reference to News data list, its an Observable\n  newRef: AngularFireObject<any>;   // Reference to News object, its an Observable too\n\n  constructor(private db: AngularFireDatabase) { }\n\n  // Fetch News List\n  GetNewList() {\n    this.newsRef = this.db.list('News-list');\n    return this.newsRef;\n  }\n\n  // Update New Object\n  ArchiveNew(id: string) {\n    this.newRef = this.db.object('News-list/' + id);\n    this.newRef.update({\n      archived: true\n    })\n  }\n\n  // Delete News Object\n  DeleteNew(id: string) {\n    this.newRef = this.db.object('News-list/' + id);\n    this.newRef.remove();\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig : {\n    apiKey: \"AIzaSyBbKChl53Zn0Af_0onaUn0lnKQ5m2rMttg\",\n    authDomain: \"news-c1eed.firebaseapp.com\",\n    databaseURL: \"https://news-c1eed.firebaseio.com\",\n    projectId: \"news-c1eed\",\n    storageBucket: \"news-c1eed.appspot.com\",\n    messagingSenderId: \"614472918609\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}